<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.imixs.workflow</groupId>
	<artifactId>imixs-microservice</artifactId>
	<version>1.5.7</version>
	<packaging>war</packaging>
	<name>Imixs-Workflow Microservice</name>

	<description>Imixs-Workflow Microservice </description>
	<url>https://github.com/imixs/imixs-microservice</url>
	<organization>
		<name>Imixs Software Solutions GmbH</name>
		<url>http://www.imixs.com</url>
	</organization>
	<inceptionYear>2006</inceptionYear>

	<developers>
		<developer>
			<id>rsoika</id>
			<name>Ralph Soika</name>
			<email>ralph.soika@imixs.com</email>
			<url>http://blog.imixs.org/</url>
			<organization>Imixs Software Solutions GmbH</organization>
			<organizationUrl>http://www.imixs.com</organizationUrl>
			<roles>
				<role>developer</role>
				<role>testing</role>
			</roles>
			<timezone>2</timezone>
		</developer>

		<developer>
			<id>gaheinle</id>
			<name>Gaby Heinle</name>
			<email />
			<url />
			<organization>Imixs Software Solutions GmbH</organization>
			<organizationUrl>http://www.imixs.com</organizationUrl>
			<roles>
				<role>developer</role>
				<role>testing</role>
			</roles>
			<timezone>2</timezone>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/imixs/imixs-microservice.git</connection>
		<developerConnection>scm:git:https://github.com/imixs/imixs-microservice.git</developerConnection>
		<url>https://github.com/imixs/imixs-microservice/</url>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/imixs/imixs-microservice/issues</url>
	</issueManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.imixs.workflow.version>5.0.0</org.imixs.workflow.version>
		<org.imixs.adapters.version>2.0.0</org.imixs.adapters.version>
		<org.imixs.melman.version>1.0.9</org.imixs.melman.version>
		<lucene.version>7.5.0</lucene.version>
		<custom.webResources>src/main/webapp</custom.webResources>
		<imixs-workflow.applicationname>imixs-microservice</imixs-workflow.applicationname>
	</properties>

	<profiles>

		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>
									<target>
										<exec executable="docker">
											<arg value="build" />
											<arg value="-t" />
											<arg value="imixs/${imixs-workflow.applicationname}" />
											<arg value="." />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker-build</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>
									<target>
										<exec executable="docker">
											<arg value="build" />
											<arg value="-t" />
											<arg
												value="imixs/${imixs-workflow.applicationname}:${project.version}" />
											<arg value="." />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker-push</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>
									<target>
										<exec executable="docker">
											<arg value="build" />
											<arg value="-t" />
											<arg
												value="imixs/${imixs-workflow.applicationname}:${project.version}" />
											<arg value="." />
										</exec>
										<exec executable="docker">
											<arg value="tag" />
											<arg
												value="imixs/${imixs-workflow.applicationname}:${project.version}" />
											<arg
												value="${org.imixs.docker.registry}/imixs/${imixs-workflow.applicationname}:${project.version}" />
										</exec>
										<exec executable="docker">
											<arg value="push" />
											<arg
												value="${org.imixs.docker.registry}/imixs/${imixs-workflow.applicationname}:${project.version}" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker-hub</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>
									<target>
										<exec executable="docker">
											<arg value="build" />
											<arg value="-t" />
											<arg
												value="imixs/${imixs-workflow.applicationname}:${project.version}" />
											<arg value="." />
										</exec>
										<exec executable="docker">
											<arg value="push" />
											<arg
												value="imixs/${imixs-workflow.applicationname}:${project.version}" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


		<!-- wildfly profile (development - unpacking war) -->
		<profile>
			<id>wildfly</id>
			<properties>
				<custom.unpackTypes>war</custom.unpackTypes>
			</properties>
		</profile>

		<!-- glassfish profile -->
		<profile>
			<id>glassfish</id>
			<properties>
				<custom.webResources>src/main/webapp_glassfish</custom.webResources>
				<custom.unpackTypes>war</custom.unpackTypes>
			</properties>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>sonatype-snaptshots</id>
			<name>Sonatype Snapshot repository</name>
			<url>http://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>
		<repository>
			<id>imixs-mvn-repo</id>
			<url>https://raw.githubusercontent.com/imixs/imixs-mvn-repo/master/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>


	<build>

		<resources>
			<!-- enable resource filtering for multi language version -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		
		
		
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<webResources>
						<resource>
							<!-- this is relative to the pom.xml directory -->
							<directory>${custom.webResources}</directory>
						</resource>
					</webResources>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			
			<!-- copy artifact into docker/apps -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy-installed</id>
						<phase>install</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<type>${project.packaging}</type>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.basedir}/src/docker/apps</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<!-- test directory for junit -->
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/model</directory>
			</testResource>
		</testResources>

		<finalName>imixs-microservice</finalName>
	</build>

	<dependencies>
		<!-- Jakarta EE -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>8.0</version>
			<scope>provided</scope>
		</dependency>
	

		<!-- Imixs Workflow -->
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-workflow-engine</artifactId>
			<version>${org.imixs.workflow.version}</version>
		</dependency>

		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-workflow-jax-rs</artifactId>
			<version>${org.imixs.workflow.version}</version>
		</dependency>

		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-workflow-faces</artifactId>
			<version>${org.imixs.workflow.version}</version>
		</dependency>



		<!-- Apache Lucene -->
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>${lucene.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers-common</artifactId>
			<version>${lucene.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queryparser</artifactId>
			<version>${lucene.version}</version>
		</dependency>
		
		
		<!-- Imixs-Adapter Apache Kafka (since version 1.6.3) 
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-adapters-kafka</artifactId>
			<version>${org.imixs.adapters.version}</version>
			<scope>compile</scope>
		</dependency>
		-->
		
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-melman</artifactId>
			<version>${org.imixs.melman.version}</version>
			<scope>test</scope>
		</dependency>
	
		
		<!-- JUnit Tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		
		<!-- JAX-RS 2.0 Test dependencies -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>2.27</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-client</artifactId>
			<version>3.0.15</version>
			<scope>test</scope>
		</dependency>
		

	</dependencies>
</project>